{"ast":null,"code":"var _jsxFileName = \"/Users/pariketkoirala/i/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [keyword, setKeyword] = useState(\"\");\n  const [results, setResults] = useState(\"\");\n  const [typingText, setTypingText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSearch = async () => {\n    try {\n      setError(\"\");\n      setResults(\"\");\n      setTypingText(\"Loading...\");\n      const response = await fetch(\"http://localhost:3001/api/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          query: keyword\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        simulateTypingEffect(data.results);\n      } else {\n        setTypingText(\"\");\n        setError(data.message || \"Error fetching data. Please try again.\");\n      }\n    } catch (err) {\n      setTypingText(\"\");\n      setError(\"Failed to fetch data. Please try again later.\");\n    }\n  };\n  const simulateTypingEffect = text => {\n    let index = 0;\n    setTypingText(\"\");\n    const interval = setInterval(() => {\n      if (index < text.length) {\n        setTypingText(prev => prev + text[index]);\n        index++;\n      } else {\n        clearInterval(interval);\n      }\n    }, 50); // Adjust speed by changing the interval time\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bible Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter a keyword to search for related Bible verses\",\n      value: keyword,\n      onChange: e => setKeyword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), typingText && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: typingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8f6CRqGNg44g539/Uwx7Esq1P1w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","keyword","setKeyword","results","setResults","typingText","setTypingText","error","setError","handleSearch","response","fetch","method","headers","body","JSON","stringify","query","data","json","success","simulateTypingEffect","message","err","text","index","interval","setInterval","length","prev","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/pariketkoirala/i/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [keyword, setKeyword] = useState(\"\");\n  const [results, setResults] = useState(\"\");\n  const [typingText, setTypingText] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleSearch = async () => {\n    try {\n      setError(\"\");\n      setResults(\"\");\n      setTypingText(\"Loading...\");\n\n      const response = await fetch(\"http://localhost:3001/api/search\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ query: keyword }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        simulateTypingEffect(data.results);\n      } else {\n        setTypingText(\"\");\n        setError(data.message || \"Error fetching data. Please try again.\");\n      }\n    } catch (err) {\n      setTypingText(\"\");\n      setError(\"Failed to fetch data. Please try again later.\");\n    }\n  };\n\n  const simulateTypingEffect = (text) => {\n    let index = 0;\n    setTypingText(\"\");\n    const interval = setInterval(() => {\n      if (index < text.length) {\n        setTypingText((prev) => prev + text[index]);\n        index++;\n      } else {\n        clearInterval(interval);\n      }\n    }, 50); // Adjust speed by changing the interval time\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Bible Search</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter a keyword to search for related Bible verses\"\n        value={keyword}\n        onChange={(e) => setKeyword(e.target.value)}\n      />\n      <button onClick={handleSearch}>Search</button>\n      {typingText && <div className=\"results\">{typingText}</div>}\n      {error && <div className=\"results\" style={{ color: \"red\" }}>{error}</div>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFD,QAAQ,CAAC,EAAE,CAAC;MACZJ,UAAU,CAAC,EAAE,CAAC;MACdE,aAAa,CAAC,YAAY,CAAC;MAE3B,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,KAAK,EAAEhB;QAAQ,CAAC;MACzC,CAAC,CAAC;MAEF,MAAMiB,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBC,oBAAoB,CAACH,IAAI,CAACf,OAAO,CAAC;MACpC,CAAC,MAAM;QACLG,aAAa,CAAC,EAAE,CAAC;QACjBE,QAAQ,CAACU,IAAI,CAACI,OAAO,IAAI,wCAAwC,CAAC;MACpE;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZjB,aAAa,CAAC,EAAE,CAAC;MACjBE,QAAQ,CAAC,+CAA+C,CAAC;IAC3D;EACF,CAAC;EAED,MAAMa,oBAAoB,GAAIG,IAAI,IAAK;IACrC,IAAIC,KAAK,GAAG,CAAC;IACbnB,aAAa,CAAC,EAAE,CAAC;IACjB,MAAMoB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIF,KAAK,GAAGD,IAAI,CAACI,MAAM,EAAE;QACvBtB,aAAa,CAAEuB,IAAI,IAAKA,IAAI,GAAGL,IAAI,CAACC,KAAK,CAAC,CAAC;QAC3CA,KAAK,EAAE;MACT,CAAC,MAAM;QACLK,aAAa,CAACJ,QAAQ,CAAC;MACzB;IACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EACV,CAAC;EAED,oBACE5B,OAAA;IAAKiC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlC,OAAA;MAAAkC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtC,OAAA;MACEuC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oDAAoD;MAChEC,KAAK,EAAEtC,OAAQ;MACfuC,QAAQ,EAAGC,CAAC,IAAKvC,UAAU,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFtC,OAAA;MAAQ6C,OAAO,EAAElC,YAAa;MAAAuB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7C/B,UAAU,iBAAIP,OAAA;MAAKiC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAE3B;IAAU;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACzD7B,KAAK,iBAAIT,OAAA;MAAKiC,SAAS,EAAC,SAAS;MAACa,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAEzB;IAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV;AAACpC,EAAA,CA7DQD,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AA+DZ,eAAeA,GAAG;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}