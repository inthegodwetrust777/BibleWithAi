{"ast":null,"code":"var _jsxFileName = \"/Users/pariketkoirala/i/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [simplifyQuery, setSimplifyQuery] = useState('');\n  const [searchResults, setSearchResults] = useState('');\n  const [simplifiedVerse, setSimplifiedVerse] = useState('');\n  const [quiz, setQuiz] = useState('');\n  const [dailyQuote, setDailyQuote] = useState('');\n  const handleSearch = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          query: searchQuery\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setSearchResults(data.results);\n      } else {\n        setSearchResults('No results found.');\n      }\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n      setSearchResults('Error fetching results. Please try again.');\n    }\n  };\n  const handleSimplify = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/simplify', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          verse: simplifyQuery\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setSimplifiedVerse(data.simplified);\n        setQuiz(data.quiz);\n      } else {\n        setSimplifiedVerse('Unable to simplify this verse.');\n        setQuiz('');\n      }\n    } catch (error) {\n      console.error('Error simplifying verse:', error);\n      setSimplifiedVerse('Error simplifying the verse. Please try again.');\n      setQuiz('');\n    }\n  };\n  const fetchDailyQuote = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/daily-quote');\n      const data = await response.json();\n      if (data.success) {\n        setDailyQuote(data.quote);\n      } else {\n        setDailyQuote('No quote available for today.');\n      }\n    } catch (error) {\n      console.error('Error fetching daily quote:', error);\n      setDailyQuote('Error fetching daily quote. Please try again.');\n    }\n  };\n\n  // Fetch daily quote on load\n  React.useEffect(() => {\n    fetchDailyQuote();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bible Search and Learning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Daily Bible Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"daily-quote\",\n        children: dailyQuote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Bible Verses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Enter a keyword (e.g., love, faith)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results\",\n        children: searchResults\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Simplify a Bible Verse for Children\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: simplifyQuery,\n        onChange: e => setSimplifyQuery(e.target.value),\n        placeholder: \"Enter a Bible verse (e.g., John 3:16)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSimplify,\n        children: \"Simplify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"simplified\",\n        children: simplifiedVerse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quiz\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Quiz:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), \" \", quiz]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sJdftG6F5i9ESoPWSxME+dbd0vI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","searchQuery","setSearchQuery","simplifyQuery","setSimplifyQuery","searchResults","setSearchResults","simplifiedVerse","setSimplifiedVerse","quiz","setQuiz","dailyQuote","setDailyQuote","handleSearch","response","fetch","method","headers","body","JSON","stringify","query","data","json","success","results","error","console","handleSimplify","verse","simplified","fetchDailyQuote","quote","useEffect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/pariketkoirala/i/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [simplifyQuery, setSimplifyQuery] = useState('');\n  const [searchResults, setSearchResults] = useState('');\n  const [simplifiedVerse, setSimplifiedVerse] = useState('');\n  const [quiz, setQuiz] = useState('');\n  const [dailyQuote, setDailyQuote] = useState('');\n\n  const handleSearch = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/search', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ query: searchQuery }),\n      });\n      const data = await response.json();\n      if (data.success) {\n        setSearchResults(data.results);\n      } else {\n        setSearchResults('No results found.');\n      }\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n      setSearchResults('Error fetching results. Please try again.');\n    }\n  };\n\n    const handleSimplify = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/simplify', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ verse: simplifyQuery }),\n        });\n        const data = await response.json();\n        if (data.success) {\n          setSimplifiedVerse(data.simplified);\n          setQuiz(data.quiz);\n        } else {\n          setSimplifiedVerse('Unable to simplify this verse.');\n          setQuiz('');\n        }\n      } catch (error) {\n        console.error('Error simplifying verse:', error);\n        setSimplifiedVerse('Error simplifying the verse. Please try again.');\n        setQuiz('');\n      }\n    };\n    \n\n  const fetchDailyQuote = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/daily-quote');\n      const data = await response.json();\n      if (data.success) {\n        setDailyQuote(data.quote);\n      } else {\n        setDailyQuote('No quote available for today.');\n      }\n    } catch (error) {\n      console.error('Error fetching daily quote:', error);\n      setDailyQuote('Error fetching daily quote. Please try again.');\n    }\n  };\n\n  // Fetch daily quote on load\n  React.useEffect(() => {\n    fetchDailyQuote();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Bible Search and Learning</h1>\n\n      <section>\n        <h2>Daily Bible Quote</h2>\n        <div className=\"daily-quote\">{dailyQuote}</div>\n      </section>\n\n      <section>\n        <h2>Search Bible Verses</h2>\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          placeholder=\"Enter a keyword (e.g., love, faith)\"\n        />\n        <button onClick={handleSearch}>Search</button>\n        <div className=\"results\">{searchResults}</div>\n      </section>\n\n      <section>\n        <h2>Simplify a Bible Verse for Children</h2>\n        <input\n          type=\"text\"\n          value={simplifyQuery}\n          onChange={(e) => setSimplifyQuery(e.target.value)}\n          placeholder=\"Enter a Bible verse (e.g., John 3:16)\"\n        />\n        <button onClick={handleSimplify}>Simplify</button>\n        <div className=\"simplified\">{simplifiedVerse}</div>\n        <div className=\"quiz\">\n          <strong>Quiz:</strong> {quiz}\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}